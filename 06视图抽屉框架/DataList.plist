<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
	<dict>
		<key>title</key>
		<string>堆和栈的内存区别,他们是如何分配和释放的</string>
		<key>detail</key>
		<string>栈:是由编译器自动管理,无需我们手动控制,\n堆:释放工作是由程序员来控制,容易产生内存泄露.\n栈有2种分配方式:静态分配和动态分配,静态分配是由编译器完成的,比如局部变量的分配,动态分配由alloc函数进行分配.释放跟堆不同,栈的动态分配是由编译器进行释放的.\n堆:都是动态分配.没有静态分配.</string>
		<key>itemType</key>
		<string>1</string>
		<key>zan</key>
		<integer>30</integer>
	</dict>
</array>
</plist>
